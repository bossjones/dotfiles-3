#!/usr/bin/env python2.6

from twisted.internet.defer import inlineCallbacks
from twisted.internet import reactor
from twisted.internet.protocol import ClientCreator
from txamqp.protocol import AMQClient
from txamqp.client import TwistedDelegate
import txamqp.spec
import txamqp.queue

import os

class Client(AMQClient):

    def close(self, reason):
        for ch in self.channels.values():
            ch.close(reason)
        # TODO(silas): figure out why Close is raised and how to properly
        # handle it.
        # for q in self.queues.values():
        #     q.close()
        self.delegate.close(reason)

@inlineCallbacks
def got_connection(conn, username, password, exchange, routing_key='default', queue=''):
    consumer_tag = 'testtag'
    queue = queue or exchange

    print 'Connected to broker.'
    yield conn.authenticate(username, password)

    print 'Authenticated. Ready to receive messages'
    chan = yield conn.channel(1)
    yield chan.channel_open()

    yield chan.queue_declare(queue=queue, durable=True, exclusive=False, auto_delete=False)
    yield chan.exchange_declare(exchange=exchange, type='direct', durable=True, auto_delete=False)
    yield chan.queue_bind(queue=queue, exchange=exchange, routing_key=routing_key)
    yield chan.basic_consume(queue=queue, no_ack=True, consumer_tag=consumer_tag)
    queue = yield conn.queue(consumer_tag)

    try:
        while True:
            msg = yield queue.get()
            print msg.content.body
    except KeyboardInterrupt:
        pass

    yield chan.basic_cancel(consumer_tag)
    yield chan.channel_close()
    chan0 = yield conn.channel(0)
    yield chan0.connection_close()

    reactor.stop()

if __name__ == '__main__':
    import optparse

    parser = optparse.OptionParser()
    parser.add_option(
        '--host',
        dest='host',
        default='localhost',
    )
    parser.add_option(
        '--port',
        dest='port',
        default=5672,
    )
    parser.add_option(
        '--username',
        dest='username',
        default='guest',
    )
    parser.add_option(
        '--password',
        dest='password',
        default='guest',
    )
    parser.add_option(
        '--spec-file',
        dest='spec_file',
    )
    parser.add_option(
        '--vhost',
        dest='vhost',
        default='/',
    )
    parser.add_option(
        '--exchange',
        dest='exchange',
        default='hello',
    )
    parser.add_option(
        '--routing-key',
        dest='routing_key',
        default='default',
    )
    parser.add_option(
        '--queue',
        dest='queue',
        default='',
    )
    options, args = parser.parse_args()

    spec_file = options.spec_file or \
        os.path.join(
            os.path.dirname(os.path.realpath(__file__)),
            'amqp',
            'amqp0-8.xml',
        )
    spec = txamqp.spec.load(spec_file)

    delegate = TwistedDelegate()

    d = ClientCreator(
        reactor,
        Client,
        delegate=delegate,
        vhost=options.vhost,
        spec=spec,
    ).connectTCP(options.host, int(options.port))

    d.addCallback(
        got_connection,
        options.username,
        options.password,
        options.exchange,
        routing_key=options.routing_key,
        queue=options.queue,
    )

    reactor.run()
