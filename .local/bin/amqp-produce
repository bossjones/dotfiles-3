#!/usr/bin/env python

from twisted.internet.defer import inlineCallbacks
from twisted.internet import reactor, task
from twisted.internet.protocol import ClientCreator
from txamqp.protocol import AMQClient
from txamqp.client import TwistedDelegate
from txamqp.content import Content
import txamqp.spec

import json
import uuid

@inlineCallbacks
def got_connection(conn, username, password, exchange, routing_key='default', body=''):
    yield conn.authenticate(username, password)

    chan = yield conn.channel(1)
    yield chan.channel_open()

    msg = Content(body)
    msg['delivery mode'] = 2
    chan.basic_publish(exchange=exchange, content=msg, routing_key=routing_key)

    yield chan.channel_close()

    chan0 = yield conn.channel(0)
    yield chan0.connection_close()
    
    reactor.stop()
    
if __name__ == '__main__':
    import optparse
    import os

    parser = optparse.OptionParser()
    parser.add_option(
        '--host',
        dest='host',
        default='localhost',
    )
    parser.add_option(
        '--port',
        dest='port',
        default=5672,
    )
    parser.add_option(
        '--username',
        dest='username',
        default='guest',
    )
    parser.add_option(
        '--password',
        dest='password',
        default='guest',
    )
    parser.add_option(
        '--spec-file',
        dest='spec_file',
    )
    parser.add_option(
        '--vhost',
        dest='vhost',
        default='/',
    )
    parser.add_option(
        '--exchange',
        dest='exchange',
        default='hello',
    )
    parser.add_option(
        '--routing-key',
        dest='routing_key',
        default='default',
    )
    parser.add_option(
        '--queue',
        dest='queue',
        default='',
    )
    parser.add_option(
        '--file',
        dest='file',
        default='',
    )
    options, args = parser.parse_args()

    spec_file = options.spec_file or \
        os.path.join(
            os.path.dirname(os.path.realpath(__file__)),
            'amqp',
            'amqp0-8.xml',
        )
    spec = txamqp.spec.load(spec_file)

    if options.file:
        if not os.path.isfile(options.file):
            utils.exit(
                code=1,
                text='Specified file not found: %s' % option.file,
            )
        with open(options.file) as f:
            body = f.read()
    else:
        body = ' '.join(args)

    delegate = TwistedDelegate()

    d = ClientCreator(
        reactor,
        AMQClient,
        delegate=delegate,
        vhost=options.vhost,
        spec=spec,
    ).connectTCP(options.host, int(options.port))

    d.addCallback(
        got_connection,
        options.username,
        options.password,
        options.exchange,
        body=body,
        routing_key=options.routing_key,
    )

    reactor.run()
